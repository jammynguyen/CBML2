// file: $DAT_DIR/Dbg.hpp

Dbg env
{
  // attributes for log management
  stdout    1   // bool variable meaning ‘print to stdout’
  debugger  0   // bool variable meaning ‘print to a debugger’
                     // window (Visual C++ only)
  file      1  // bool variable meaning ‘print to file’.     
  flushEvery 10   // indicates how often the debug log file is flushed:
                     //    0: operating system managed flushing
                     //   1: flush after every message
                     //   2: flush after every 2nd message
                     //   3: ...               3rd ...
  checkHeap 0   // (Windows only) If set to 1, makes Dbg::~Dbg
                 // print out heap heap allocation information
                 // that may help you to detect memory leaks.
                 // To enable this feature, link with
                      // msvcrtd.lib and libutil_checkheap.lib
                 // instead of libutil.lib.    
                 // Further, set linker options
                 // -nodefaultlib:msvcrt and -nodefaultlib:libc
                 // if the linker outputs a warning related to
                 // msvcrtd.lib.

  diskLimitPercent   70      // debug system uses disk space up to this limit (in %)
  logFileSize        2560000 //10240000 // maximum number of bytes in a log file
  
  // attributes for message filtering
  verbosity 5   // Used for message filtering: The higher the number, the more
                     // messages may appear.
  categories env // List of category/verbosity pairs
  {
    TRACE 0      // category function trace has verbosity limit 5, set to 0 to switch off traces
  }
 // functions env  // List of functionName/verbosity pairs
 // {
 //   MyClass::myFunction 3    // just an example
 // }

  wdog env
  {
    categories env
    {
      COM4 0
    }
  }
}